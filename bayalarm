from pgmpy.models import BayesianNetwork
from pgmpy.factors.discrete import TabularCPD
from pgmpy.inference import VariableElimination

# Define the Bayesian Network structure
model = BayesianNetwork([
    ('Burglary', 'Alarm'),
    ('Earthquake', 'Alarm'),
    ('Alarm', 'DavidCalls'),
    ('Alarm', 'SophiaCalls')
])

# Define the CPDs (Conditional Probability Distributions)
cpd_burglary = TabularCPD(variable='Burglary', variable_card=2, values=[[0.002], [0.998]])
cpd_earthquake = TabularCPD(variable='Earthquake', variable_card=2, values=[[0.001], [0.999]])

cpd_alarm = TabularCPD(variable='Alarm', variable_card=2,
                       values=[[0.94, 0.95, 0.29, 0.001],
                            [0.06, 0.05, 0.71, 0.999]],
                       evidence=['Burglary', 'Earthquake'],
                       evidence_card=[2, 2])

cpd_davidcalls = TabularCPD(variable='DavidCalls', variable_card=2,
                            values=[[0.91, 0.05],
                                    [0.09, 0.95]],
                            evidence=['Alarm'],
                            evidence_card=[2])

cpd_sophiacalls = TabularCPD(variable='SophiaCalls', variable_card=2,
                             values=[[0.75, 0.02],
                                     [0.25, 0.98]],
                             evidence=['Alarm'],
                             evidence_card=[2])

# Add the CPDs to the model
model.add_cpds(cpd_burglary, cpd_earthquake, cpd_alarm, cpd_davidcalls, cpd_sophiacalls)

# Verify the model is correctly defined
model.check_model()

# Perform inference
inference = VariableElimination(model)

# Calculate the probability P(B=F, E=F, A=T, D=T, S=T)
result = inference.query(variables=['Alarm'],
                         evidence={'Burglary': 0, 'Earthquake': 0, 'DavidCalls': 1, 'SophiaCalls': 1})

print(result)
